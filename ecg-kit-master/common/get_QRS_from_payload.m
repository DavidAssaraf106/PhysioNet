%% (Internal) Get QRS detections from a payload generated by ECGtask_QRS_detection  
%
%     QRS_vector = get_QRS_from_payload(QRS_payload)
% 
% 
% Arguments:
% 
%   +  QRS_payload: data payload 
% 
% Output:
% 
%   + QRS_struct: QRS detection vector
% 
% 
% Example:
% 
% 
% See also ECGtask_QRS_detection
% 
% Author: Mariano Llamedo Soria (llamedom at frba.utn.edu.ar)
% Version: 0.1 beta
% Birthdate: 14/05/2016
% Last update: 14/05/2016
% Copyright 2008-2016
% 
function QRS_struct = get_QRS_from_payload(QRS_payload, ECG_start_offset, ECG_sample_start_end_idx)

    if( nargin < 2 || isempty(ECG_start_offset) )
        ECG_start_offset = 1;
    end
        
    if( nargin < 3 || isempty(ECG_sample_start_end_idx) )
        ECG_sample_start_end_idx = [1 realmax];
    end

    QRS_struct = [];
    QRS_vector = [];
    delineation_chosen = [];
    
    if( isstruct(QRS_payload) )

        fnames = fieldnames(QRS_payload);
        aux_idx = find(cell2mat( cellfun(@(a)(~isempty(strfind(a, 'corrected_'))), fnames, 'UniformOutput', false)));

        if( isempty(aux_idx) )

            if( isfield(QRS_payload, 'series_quality') )
                % get the best qualified QRS detection.
                [~, aux_idx] = sort(QRS_payload.series_quality.ratios, 'descend');
                delineation_chosen = QRS_payload.series_quality.AnnNames{aux_idx(1),1};
                QRS_vector = QRS_payload.(delineation_chosen).(QRS_payload.series_quality.AnnNames{aux_idx(1),2}) - ECG_start_offset + 1;
                QRS_vector = QRS_vector( QRS_vector >= ECG_sample_start_end_idx(1) & QRS_vector < ECG_sample_start_end_idx(2) );
            else
                
                % try to choose the first of wavedet
                aux_idx = find(cell2mat( cellfun(@(a)(~isempty(strfind(a, 'wavedet_'))), fnames, 'UniformOutput', false)));
                if( isempty(aux_idx) )
                    for fname = rowvec(fnames)
                        if( isfield(QRS_payload.(fname{1}), 'time') )
                            % get the first QRS detection found.
                            delineation_chosen = fname{1};
                        end
                    end
                else
                    % choose the first of wavedet detections
                    delineation_chosen = fnames{aux_idx(1)};
                end
                
            end
        else
            % get the first manually corrected QRS detection.
            delineation_chosen = fnames{aux_idx(1)};
        end

    end

    if( isempty(delineation_chosen) )
        disp_string_framed(2, 'Could not identify QRS detections in the input payload.');
    else
        if( isempty(QRS_vector) )
            QRS_vector = QRS_payload.(delineation_chosen).time - ECG_start_offset + 1;
            QRS_vector = QRS_vector( QRS_vector >= ECG_sample_start_end_idx(1) & QRS_vector < ECG_sample_start_end_idx(2) );
        end
        QRS_vector = sort(unique(QRS_vector));
        QRS_struct.time = QRS_vector;
        cprintf('blue', [' + Using ' delineation_chosen ' detections.\n' ] );
    end
      